name: Deploy Go App to VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules
        id: go-cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-
            ${{ runner.os }}-go-
        continue-on-error: true  # Continue if the cache operation fails

      - name: Build Go Application
        run: |
          # Make sure the binary name is exactly "paybutton"
          # This must match what the systemd service expects
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o paybutton .
          echo "Build complete: paybutton"
          
          # Verify the binary exists
          ls -la paybutton

      - name: Prepare Artifact
        run: |
          # Include only the binary in the artifact
          tar -czf artifact.tar.gz paybutton
          echo "Artifact created: artifact.tar.gz"

      - name: Upload to VPS and Deploy
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          port: ${{ secrets.VPS_SSH_PORT }}
          username: ${{ secrets.VPS_SSH_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "artifact.tar.gz"
          target: "/home/${{ secrets.VPS_SSH_USER }}/uploads"

      - name: Execute Deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          port: ${{ secrets.VPS_SSH_PORT }}
          username: ${{ secrets.VPS_SSH_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Debug commands to check environment and permissions
            echo "Current user: $(whoami)"
            echo "Home directory: $HOME"
            ls -la /opt/deploy

            # Simplified deployment approach
            TIMESTAMP=$(date +%s)
            ARTIFACT_PATH="/home/${{ secrets.VPS_SSH_USER }}/uploads/artifact.tar.gz"

            # Use sudo with -n flag (non-interactive) to check sudo permissions
            sudo -n mkdir -p /opt/deploy/artifacts || echo "Sudo permission issue"

            # Proceed with deployment if possible
            if sudo -n true; then
              sudo -n cp $ARTIFACT_PATH /opt/deploy/artifacts/${{ secrets.APP_NAME }}_${TIMESTAMP}.tar.gz
              sudo -n /opt/deploy/scripts/deploy.sh ${{ secrets.APP_NAME }} /opt/deploy/artifacts/${{ secrets.APP_NAME }}_${TIMESTAMP}.tar.gz
            else
              echo "ERROR: Sudo permissions are not configured correctly"
              exit 1
            fi